name: Nightly Build And Release

on:
  schedule:
    - cron: '0 1 * * *'

env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  create_nightly_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: author/action-rollback@1.0.0
        continue-on-error: true
        with:
          tag: nightly
      - uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: nightly
          release_name: Nightly Build
          draft: false
          prerelease: true
  build_nightly:
    name: Build for ${{ matrix.targetPlatform }} on version ${{ matrix.unityVersion }}
    needs: create_nightly_release
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        unityVersion:
          - 2020.1.3f1
        targetPlatform:
          - StandaloneOSX
          - StandaloneWindows64
          - StandaloneLinux64
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - uses: webbertakken/unity-builder@v1.2
        with:
          customParameters: -nographics
          unityVersion: ${{ matrix.unityVersion }}
          targetPlatform: ${{ matrix.targetPlatform }}
      - run: zip -r build.zip build
      - uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ needs.create_nightly_release.outputs.upload_url }}
          asset_name: ${{ matrix.targetPlatform }}.zip
          asset_path: build.zip
          asset_content_type: application/octet-stream
